JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер.
mkdir GIT_JSON
cd GIT_JSON
git config --global user.email tchexovskie@mail.ru
git config --global user.name "Ongelia"
git clone https://github.com/Ongelia/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json

 7. Добавить файл под гит.
git status
git add new.json
 8. Закоммитить файл.
git commit -m "1 commit file new.json"
 9. Отправить файл на внешний GitHub репозиторий.
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
I
{
"person": {
  "name": "Ольга",
  "surname":"Чеховская",
  "age": 45,
  "pet": 1,
  "future salary": 1000
   }
}
Esc
:wq
 11. Отправить изменения на внешний репозиторий.
git status
git add new.json
git commit -m "2 commit file new.json"
 12. Создать файл preferences.json
touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
I
{
"person": {
  "favorite_movie": "Море",
  "favorite_TV_series": "Сумерки",
  "favorite_food": "Драники",
  "favorite_time_of_the_year": "Лето",
  "The_country_you_want_to_visit": "Черногория"
      }
}
Esc
:wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON 
touch skills.json
vim skills.json
I
{
	"skills": [" 1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
	2. Что такое клиент-серверная архитектура.
	3. HTTP Методы запросов на сервер.
	4. Коды ответов HTTP сервера.
	5. Структуры HTTP запросов и ответов.
	6. Что такое JSON, XML. Их структура.
	7. Тестирование API через Postman (JS, автотесты API).
	8. Снятие и чтение логов c внешнего сервера.
	9. Снифинг http web трафика через Charles и Fiddler.
	10. Dev Tools веб браузеров (Google Chrome, FireFox).
	11. VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)
	12. Мобильное тестирование.
	13. Особенность iOS, Android, гайдлайны.
	14. Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)
	15. Сборка Android приложений на Android Studio.
	16. ADB (управление андройд девайсами).
	17. Настройка прокси и vpn на iOS и Android.
	18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
	19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)
	20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
	21. Доступ к удалённым серверам.
	22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
	23. База данных Postgres (установка, настройка и использование).
	24. Нереляционная база данных Redis (установка, настройка и использование).
	25. Нагрузочное тестирование в Jmeter.
	26. Методология разработки Scrum.
	27. Python. (Изучение основ. Создание клиент серверного приложения)]
	}
Esc
:x


 15. Отправить сразу 2 файла на внешний репозиторий.
git status
git add .
git commit -m 
git push

 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
	"ID": "SandyBird: 01",
	"Link to the bug report in Jira":"https://sas45.atlassian.net/browse/TS-96",
	"Summary":"Проходит валидацию пароль, введенный кириллицей в модальном окне регистрации, поле ввода 'пароль'",
	"Environment":"ПК, ОС Windows 11Браузер Google Chrome Версия 102.0.5005.115 (Официальная сборка), (64 бит)",
	"Steps": "1.Открыть сайт SendyBird 2.Нажать кнопку 'Начать бесплатно' 3.Ввести валидные данные для поля 'Адрес электронной почты' 4.Ввести данные кириллицей 'этобаг' в поле ввода “Пароль” 5.Проверить отображается ли системное уведомление для поля 'Пароль'",
	"Actual result":"При вводе данных кириллицей в поле ввода 'Пароль' на вкладке 'Войти' данные проходят валидацию, системное уведомление не отображается",
	"Expected result":"При вводе данных кириллицей в поле ввода 'Пароль' на вкладке 'Начать бесплатно' данные не проходят валидацию, системное уведомление отображается",
	"Severity":"Minor",
	"Priority":"Low",
	"Reproducibility":"Всегда"
	}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull

